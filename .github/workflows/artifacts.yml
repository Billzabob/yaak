name: Generate Artifacts
on:
  push:
    tags: [ v* ]

permissions: write-all

jobs:
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Cache Rust
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Install dependencies
        run: |
          npm ci
          cd plugins/filter-jsonpath
          npm ci
          cd ../filter-xpath
          npm ci
          cd ../importer-insomnia
          npm ci
          cd ../importer-postman
          npm ci
          cd ../importer-yaak
          npm ci
      - name: Build plugins
        run: npm run build:plugins
      - name: Run tests
        run: npm test
      # Pin dev version to get non-default targets
      # https://github.com/tauri-apps/tauri-action/issues/356
      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        with:
          tagName: 'v__VERSION__'
          releaseName: 'Release __VERSION__'
          releaseBody: '<!-- Release Notes -->'
          releaseDraft: true
          prerelease: false
          args: '--target ${{ matrix.target }}'
